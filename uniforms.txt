uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;
uniform mat4 modelViewMatrix;
uniform mat4 modelViewProjectionMatrix;

uniform mat4 modelMatrixInverse;
uniform mat4 viewMatrixInverse;
uniform mat4 projectionMatrixInverse;
uniform mat4 modelViewMatrixInverse;
uniform mat4 modelViewProjectionMatrixInverse;

uniform mat3 normalMatrix;

uniform vec4 lightAmbient;  // similar a gl_LightSource[0].ambient
uniform vec4 lightDiffuse;  // similar a gl_LightSource[0].diffuse
uniform vec4 lightSpecular; // similar a gl_LightSource[0].specular
uniform vec4 lightPosition; // similar a gl_LightSource[0].position; en eye space
uniform vec4 matAmbient;    // similar a gl_FrontMaterial.ambient 
uniform vec4 matDiffuse;    // similar a gl_FrontMaterial.diffuse 
uniform vec4 matSpecular;   // similar a gl_FrontMaterial.specular
uniform float matShininess; // similar a gl_FrontMaterial.shininess

uniform vec3 boundingBoxMin; // cantonada minima de la capsa englobant 
uniform vec3 boundingBoxMax; // cantonada maxima de la capsa englobant

uniform vec2 mousePosition;  // coordenades del cursor (window space; origen a la cantonada inferior esquerra)

const vec4 RED     = vec4(1, 0, 0, 1);
const vec4 GREEN   = vec4(0, 1, 0, 1);
const vec4 BLUE    = vec4(0, 0, 1, 1);
const vec4 CYAN    = vec4(0, 1, 1, 1);
const vec4 MAGENTA = vec4(1, 0, 1, 1);
const vec4 YELLOW  = vec4(1, 1, 0, 1);
const vec4 WHITE   = vec4(1);
const vec4 GREY    = vec4(0.8);
const vec4 BLACK   = vec4(0);

vec4 colors[8];
colors[0] = vec4(1, 0, 0, 1); // RED
colors[1] = vec4(1, 1, 0, 1); // YELLOW
colors[2] = vec4(0, 1, 0, 1); // GREEN
colors[3] = vec4(0, 1, 1, 1); // CYAN
colors[4] = vec4(0, 0, 1, 1); // BLUE
colors[5] = vec4(1, 0, 1, 1); // MAGENTA
colors[6] = vec4(1, 0, 0, 1); // RED
colors[7] = vec4(1, 0, 0, 1); // RED
